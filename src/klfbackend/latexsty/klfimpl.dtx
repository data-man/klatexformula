% \iffalse meta-comment
%
% Copyright (C) 2020 by Philippe Faist, philippe.faist@bluewin.ch
% -------------------------------------------------------
% 
% This file is part of the KLatexFormula sources.  See LICENSE file
% for more information.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{klfimpl.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[2005/12/01]
%<package>\ProvidesPackage{klfimpl}
%<*package>
    [2020/05/16 v0.1 klfimpl package]
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{xcolor}
\usepackage[preset=xpkgdoc]{phfnote}
\EnableCrossrefs         
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{klfimpl.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \GetFileInfo{klfimpl.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment,\def,\gdef,\edef,\xdef,\if,\else,\fi,\ifx}
% 
% \title{The \pkgname{klfimpl} package\thanks{\itshape This document corresponds
% to \pkgname{klfimpl}~\fileversion, dated \filedate. It is part of the
% KLatexFormula sources, see \url{https://klatexformula.sourceforge.io/}.}}
% \author{Philippe Faist\quad\email{philippe.faist@bluewin.ch}}
% \date{\pkgfmtdate\filedate}
% \maketitle
%
% \begin{abstract}
%   \pkgname{klfimpl}---LaTeX helper code for the implementation of
%   KLatexFormula 5.
% \end{abstract}
%
% \inlinetoc
%
% \section{Introduction}
%
% KLatexFormula 5 will ship with a new implementation that converts a LaTeX
% equation to different formats such as PDF or PNG.  While KLatexFormula up to
% version 4 required a few runs of |gs| and other manual EPS fixes after running
% |latex| and |dvips|, the new workflow aims at directly doing everything from
% the latex end of things---get the correct paper size, correct background
% color, page margins, and so on---therefore cleaning up the workflow and
% speeding up the whole compilation.
%
% TODO: Decide \& document the different output configurations.
%
%
%
% \StopEventually{\PrintChanges\PrintIndex}
%
% \section{Implementation}
%
% \subsection{Some general declarations}
%
% The box in which the LaTeX content will be typeset.
%    \begin{macrocode}
\newbox\klf@eqnbox
%    \end{macrocode}
%
% Some dimensions etc. that we will track.  The main box dimensions (width,
% height, depth, total height = height + depth):
%    \begin{macrocode}
\newdimen\klf@w
\newdimen\klf@h
\newdimen\klf@d
\newdimen\klf@th
%    \end{macrocode}
% The paper size (width/height):
%    \begin{macrocode}
\newdimen\klf@ppw
\newdimen\klf@pph
%    \end{macrocode}
% Any offset that should be used to display the box (useful if margins are
% requested, or a fixed page width and/or height are requested):
%    \begin{macrocode}
\newdimen\klf@hshift
\newdimen\klf@vshift
%    \end{macrocode}
% And record some font dimensions:
%    \begin{macrocode}
\newdimen\klf@em
\newdimen\klf@ex
\newdimen\klf@capxhgt
%    \end{macrocode}
%
% We will compute any user input dimensions as proper dimension \emph{inside}
% the equation box to make sure font settings are taken into account correctly.
% The dimensions will be stored here.
%    \begin{macrocode}
\newdimen\klf@dim@fixedwidth
\newdimen\klf@dim@fixedheight
\newdimen\klf@dim@topmargin
\newdimen\klf@dim@rightmargin
\newdimen\klf@dim@bottommargin
\newdimen\klf@dim@leftmargin
%    \end{macrocode}
%
% Remember which engine we're running under.  To speed up things and to avoid
% problems with like |iftex| package not existing, we simply require the caller
% to tell us via a package option what |latex| engine is being run (|latex| with
% DVI output, |pdflatex|, |xelatex|, or |lualatex|).
%    \begin{macrocode}
\newif\ifklf@ltxengine@latexdvi \klf@ltxengine@latexdvifalse
\newif\ifklf@ltxengine@pdflatex \klf@ltxengine@pdflatexfalse
\newif\ifklf@ltxengine@xelatex \klf@ltxengine@xelatexfalse
\newif\ifklf@ltxengine@lualatex \klf@ltxengine@lualatexfalse
%    \end{macrocode}
%
% If, for some reason, this package is called in a different context where we
% wouldn't want the layout to be set to zero by default, then there is a package
% option for this (|keeplayoutsizes|).  This is the corresponding |\newif| flag:
%    \begin{macrocode}
\newif\ifklf@keeplayoutsizes
\klf@keeplayoutsizesfalse
%    \end{macrocode}
%
% The user can specify a fixed width and/or a fixed height for the resulting
% layout.  These will be stored here, if applicable (or they will remain empty).
% The user input should be stored as a \emph{macro}, not as a \emph{dimen},
% because we want a dimension given in font-specific metrics (e.g. |4.2em|) to
% be computed correctly relative to the equation font.
%    \begin{macrocode}
\def\klf@set@fixedwidth{}
\def\klf@set@fixedheight{}
%    \end{macrocode}
% Same, allow user to specify margins around the equations.
%    \begin{macrocode}
\def\klf@set@topmargin{0.1ex}
\def\klf@set@rightmargin{0.1ex}
\def\klf@set@bottommargin{0.1ex}
\def\klf@set@leftmargin{0.1ex}
%    \end{macrocode}
% 
% \subsection{Package options and settings}
%
% Set the \LaTeX\space engine.
%    \begin{macrocode}
\DeclareOption{latexdvi}{\klf@ltxengine@latexdvitrue}
\DeclareOption{pdflatex}{\klf@ltxengine@pdflatextrue}
\DeclareOption{xelatex}{\klf@ltxengine@xelatextrue}
\DeclareOption{lualatex}{\klf@ltxengine@lualatextrue}
%    \end{macrocode}
%
% Package option to inhibit resetting the page layout to zero by default.
%    \begin{macrocode}
\DeclareOption{keeplayoutsizes}{\klf@keeplayoutsizestrue}
%    \end{macrocode}
% 
% 
% Now process those options
%    \begin{macrocode}
\DeclareOption*{\PackageError{klfimpl}{Unknown option ‘\CurrentOption’}{}}
\ProcessOptions\relax
%    \end{macrocode}
%
% The following could have been specified as package options, but for the sake
% of simplicity (and to avoid having to use \pkgname{keyval}/\pkgname{xkeyval}
% and so on, the information is provided via a simple macro call.
%
% If applicable, set the fixed width and/or fixed height of the content to
% typeset.
%    \begin{macrocode}
\def\klfSetFixedWidth#1{%
  \xdef\klf@set@fixedwidth{#1}}
\def\klfSetFixedHeight#1{%
  \xdef\klf@set@fixedheight{#1}}
%    \end{macrocode}
%
% Same for equation margins:
%    \begin{macrocode}
\def\klfSetTopMargin#1{%
  \xdef\klf@set@topmargin{#1}}
\def\klfSetRightMargin#1{%
  \xdef\klf@set@rightmargin{#1}}
\def\klfSetBottomMargin#1{%
  \xdef\klf@set@bottommargin{#1}}
\def\klfSetLeftMargin#1{%
  \xdef\klf@set@leftmargin{#1}}
%    \end{macrocode}
%
% \subsection{Basic/common implementation macros}
% 
% First of all, a simple macro to reset all LaTeX layout dimensions.
%    \begin{macrocode}
\def\klf@ZeroLayoutSizes{%
  \oddsidemargin=\z@\relax
  \evensidemargin=\z@\relax
  \topmargin=\z@\relax
  \voffset=-1in\relax
  \hoffset=-1in\relax
  \headsep=\z@\relax
  \headheight=\z@\relax
  \marginparsep=\z@\relax
  \footskip=\z@\relax
  \parindent=\z@\relax
  \parskip=\z@\relax
  \topskip=\z@\relax
}
%    \end{macrocode}
% \begin{macro}{\klf@ZeroDisplaySkips}
% And define a routine that sets all the display-related skips to zero so that
% we can use this inside a |\vbox|.
%    \begin{macrocode}
\def\klf@ZeroDisplaySkips{%
  \abovedisplayskip=\z@\relax
  \belowdisplayskip=\z@\relax
  \abovedisplayshortskip=\z@\relax
  \belowdisplayshortskip=\z@\relax
}
%    \end{macrocode}
% \end{macro}
%
% By default, reset all these dimensions right away, unless the
% |keeplayoutsizes| package option was provided.
%    \begin{macrocode}
\ifklf@keeplayoutsizes
\else
  \klf@ZeroLayoutSizes
  \klf@ZeroDisplaySkips
\fi
%    \end{macrocode}
% 
%
% \begin{macro}{\klfSetPaperSize}
%   Change the paper size.  For |pdflatex| and |xe/luatex| this can be called
%   after |\begin||{document}| but for |latex| with traditional |dvi| output
%   this must be issued in the preamble.
%    \begin{macrocode}
\def\klfSetPaperSize#1#2{%
  \@tempdima=#1\relax
  \@tempdimb=#2\relax
  \klf@SetPaperSize@FromDims\@tempdima\@tempdimb
}
\def\klf@SetPaperSize@FromDims#1#2{%
  \global\textwidth=#1\relax
  \global\textheight=#2\relax
  \global\hsize=#1\relax
  \global\vsize=#2\relax
  \global\paperwidth=#1\relax
  \global\paperheight=#2\relax
  \ifklf@ltxengine@pdflatex
    \global\pdfpagewidth=#1\relax
    \global\pdfpageheight=#2\relax
  \fi
  \ifklf@ltxengine@xelatex
    \global\pdfpagewidth=#1\relax
    \global\pdfpageheight=#2\relax
  \fi
  \ifklf@ltxengine@lualatex
    \global\pagewidth=#1\relax
    \global\pageheight=#2\relax
  \fi
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Main implementation routine}
% 
% \begin{environment}{klfrawcontent}
%   The argument should be a |\hbox| or |\vbox| command.  Example usage:\\
%   |\begin||{klfrawcontent}{\vbox}{initialization code...} ...| or\\
%   |\begin||{klfrawcontent}{\hbox to 10cm}{init code...} ...|.
%    \begin{macrocode}
\def\klfrawcontent#1#2{%
  \setbox\klf@eqnbox=#1\bgroup
    \klf@ZeroDisplaySkips%
    #2%
    \global\klf@em=1em\relax
    \global\klf@ex=1ex\relax
    \setbox0=\hbox{X}%
    \global\klf@capxhgt=\ht0%
    \ifx\klf@set@fixedwidth\@empty\else
      \global\klf@dim@fixedwidth=\klf@set@fixedwidth\relax
    \fi
    \ifx\klf@set@fixedheight\@empty\else
      \global\klf@dim@fixedheight=\klf@set@fixedheight\relax
    \fi
    \global\klf@dim@topmargin=\klf@set@topmargin\relax
    \global\klf@dim@rightmargin=\klf@set@rightmargin\relax
    \global\klf@dim@bottommargin=\klf@set@bottommargin\relax
    \global\klf@dim@leftmargin=\klf@set@leftmargin\relax
}
\def\endklfrawcontent{%
  \egroup
%    \end{macrocode}
% 
% Now we record the box dimensions.  Add an epsilon in each dimension to prevent
% rounding errors from causing unwanted breaks.
%    \begin{macrocode}
  \klf@w=\wd\klf@eqnbox\relax
  \klf@h=\ht\klf@eqnbox\relax
  \klf@d=\dp\klf@eqnbox\relax
  \advance \klf@w 0.00001pt \relax
  \advance \klf@h 0.00001pt \relax
  \klf@th=\klf@h\relax
  \advance \klf@th \klf@d \relax
%    \end{macrocode}
% Determine the page size, taking into account any possible fixed paper width or
% height.
%    \begin{macrocode}
  \ifx\klf@set@fixedwidth\@empty%
    \klf@ppw=\klf@w\relax
    \advance \klf@ppw \klf@dim@leftmargin \relax
    \advance \klf@ppw \klf@dim@rightmargin \relax
    \klf@hshift=\klf@dim@leftmargin\relax
  \else%
    \klf@ppw=\klf@dim@fixedwidth\relax
    \klf@hshift=0.5\klf@ppw\relax
    \advance \klf@hshift -0.5\klf@w\relax
    \advance \klf@hshift -0.5\klf@dim@rightmargin\relax
    \advance \klf@hshift +0.5\klf@dim@leftmargin\relax
  \fi
  \ifx\klf@set@fixedheight\@empty%
    \klf@pph=\klf@th\relax
    \advance \klf@pph \klf@dim@topmargin \relax
    \advance \klf@pph \klf@dim@bottommargin \relax
    \klf@vshift=\klf@dim@topmargin\relax
  \else%
    \klf@pph=\klf@dim@fixedheight\relax
    \klf@vshift=0.5\klf@pph\relax
    \advance \klf@vshift -0.5\klf@th\relax
    \advance \klf@vshift -0.5\klf@dim@bottommargin\relax
    \advance \klf@vshift +0.5\klf@dim@topmargin\relax
  \fi
%    \end{macrocode}
% Now, set the paper size (if the current latex engine allows this at this
% point) and display the box:
%    \begin{macrocode}
  \ifklf@ltxengine@latexdvi% tough luck
  \else
    \message{***SETTING PAPER SIZE \the\klf@ppw\space x \the\klf@pph *****}%
    %\advance\klf@ppw 1in\relax\advance\klf@pph 1in\relax%%DEBUG !!!!!!!!!!!
    \klf@SetPaperSize@FromDims\klf@ppw\klf@pph%
  \fi
  \klfRenderContentBox{\klf@vshift}{\klf@hshift}{\klf@eqnbox}%
  \klfDumpMetaInfo
}
\def\klfRenderContentBox#1#2#3{%
  \nobreak
  \hrule \@height\z@\nobreak
  \vskip #1\relax\nobreak
  \hbox{\vrule \@width\z@ \relax
    \hskip #2\relax
    \raise \klf@d \box#3%
  }%
}
%    \end{macrocode}
% \end{environment}
% 
% \subsection{Meta-info output back to \phfverb{klatexformula}}
%
% \begin{macro}{\klfDumpMetaInfo}
%   Dump meta-info on standard output to provide additional information to
%   KLatexFormula.
%    \begin{macrocode}
\def\klfDumpMetaInfo{%
  \message{%
^^J%
***-KLF-META-INFO-BEGIN-***^^J%
EM={\the\klf@em}^^J%
EX={\the\klf@ex}^^J%
CAP_X_HEIGHT={\the\klf@capxhgt}^^J%
PAPER_WIDTH={\the\klf@ppw}^^J%
PAPER_HEIGHT={\the\klf@pph}^^J%
HSHIFT={\the\klf@hshift}^^J%
VSHIFT={\the\klf@vshift}^^J%
BOX_WIDTH={\the\klf@w}^^J%
BOX_HEIGHT={\the\klf@h}^^J%
BOX_DEPTH={\the\klf@d}^^J%
BOX_TOTALHEIGHT={\the\klf@th}^^J%
^^J%
***-KLF-META-INFO-END-***^^J%
  }
}%
%    \end{macrocode}
% \end{macro}
% 
%\Finale
\endinput
